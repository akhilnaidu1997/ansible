- name: setting up shipping module
  hosts: shipping
  become: yes 
  tasks:
  - name: install maven
    ansible.builtin.package:
      name: maven
      state: present 

  - name: add user
    ansible.builtin.user:
      name: roboshop
      comment: roboshop system user
      home: /app 
      shell: /sbin/nologin
      system: yes

  - name: delete directory
    ansible.builtin.file:
      state: absent
      path: /app

  - name: create directory
    ansible.builtin.file:
      state: directory
      path: /app

  - name: delete catalogue code
    ansible.builtin.file:
      state: absent
      path: /tmp/shipping.zip

  - name: download app code to directory
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
      dest: /tmp/shipping.zip

  - name: unzip the code
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes 

  - name: maven package 
    ansible.builtin.command: mvn clean package 
    args:
      chdir: /app

  - name: move package
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: copy service file
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: install mysql client
    ansible.builtin.dnf:
      name: mysql
      state: present 

  - name: import data into mysql 
    community.mysql.mysql_db:
      state: import
      name: all
      login_host: mysql.daws86s-akhil.shop
      login_user: root
      login_password: RoboShop@1
      target: "{{ item }}"
    loop:
    - /app/db/schema.sql
    - /app/db/app-user.sql 
    - /app/db/master-data.sql

  - name: relaod, enable and start service 
    ansible.builtin.systemd_service:
      name: shipping 
      state: restarted
      daemon_reload: true
      enabled: true
  
  